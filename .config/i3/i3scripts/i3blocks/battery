#!/usr/bin/perl
#
# Copyright 2014 Pierre Mavro <deimos@deimos.fr>
# Copyright 2014 Vivien Didelot <vivien@didelot.org>
# Copyright 2017 Andrea Gomez <hi@daedra.ml>
#
# Licensed under the terms of the GNU GPL v3, or any later version.
#
# This script is meant to use with i3blocks. It parses the output of the "acpi"
# command (often provided by a package of the same name) to read the status of
# the battery, and eventually its remaining time (to full charge or discharge).
#
# Icons are FontAwesome

use strict;
use warnings;
use utf8;

my $acpi;
my $status;
my $percent;
my $full_text;
my $short_text;
my $bat_number = $ENV{BLOCK_INSTANCE} || 0;

# Read the first line of the "acpi" command output
open (ACPI, "acpi -b | grep 'Battery $bat_number' |") or die;
$acpi = <ACPI>;
close(ACPI);

# Fail on unexpected output
if ($acpi !~ /: (\w+), (\d+)%/) {
  die "$acpi\n";
}

$status = $1;
$percent = $2;

# Display different icons for battery status
if ($status eq 'Discharging') {
  if ($percent < 20) {
    $full_text .= "\x{f244}";
  } elsif ($percent < 40) {
    $full_text .= "\x{f243}";
  } elsif ($percent < 60) {
    $full_text .= "\x{f242}";
  } elsif ($percent < 85) {
    $full_text .= "\x{f241}";
  } elsif ($percent <= 100) {
    $full_text .= "\x{f240}";
  }
} elsif ($status eq 'Charging') {
  $full_text .= "\x{f1e6}";
} elsif ($status eq 'Full') {
  $full_text .= "\x{f240} 100%";
}

$short_text = $full_text;

if ($acpi =~ /(\d\d:\d\d):/) {
  $full_text .= " $percent%";
}

# Print text
print "$full_text\n";
print "$short_text\n";

# Status code 33 is a special status code for urgency in i3blocks
if ($percent < 5) {
  exit(33);
}

exit(0);
